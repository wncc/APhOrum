swagger: "2.0"
info:
  description: "APhOrum"
  version: "1.0.0"
  title: "Swagger APhOrum"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "cheekujodhpur@gmail.com"
host: "localhost:8080"
tags:
- name: "auth"
  description: "Everything about auth"
- name: "bulletin"
  description: "Bulletin Board"
- name: "paper"
  description: "Question paper related Info"
- name: "fileio"
  description: "Upload and download files"
- name: "poll"
  description: "Polling and voting"
- name: "feedback"
  description: "Submit feedback on questions"
  
schemes:
- "http"
paths:
  /feedback:
    post:
      tags:
      - "feedback"
      summary: "Submit feedback"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: formData
          name: questionId
          type: string
          required: true
        - in: formData
          name: text
          type: string
          required: true
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
    get:
      tags:
      - "feedback"
      summary: "Get all feedback"
      description: ""
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /feedback/{feedbackId}/{status}:
    post:
      tags:
      - "feedback"
      summary: "Update feedback status"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: path
          name: feedbackId
          type: string
          required: true
        - in: path
          name: status
          type: string
          required: true
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /poll:
    post:
      tags:
      - "poll"
      summary: "Create a poll"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: formData
          name: pollId
          type: string
          required: true
        - in: formData
          name: question
          type: string
          required: true
        - in: formData
          name: options
          type: array
          items:
            type: string
          required: true
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
    get:
      tags:
      - "poll"
      summary: "Get active poll"
      description: ""
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /poll/vote:
    post:
      tags:
      - "poll"
      summary: "Vote for an option"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: formData
          name: pollId
          type: string
          required: true
          description: Which poll are you voting for?
        - in: formData
          name: option
          type: integer 
          required: true
          description: Which option are you voting for?
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /poll/vote/{pollId}:
    get:
      tags:
      - "poll"
      summary: "Get vote count"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: path
          name: pollId
          type: string
          required: true
          description: Which poll are you voting for?
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /poll/close/{pollId}:
    get:
      tags:
      - "poll"
      summary: "Close vote"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: path
          name: pollId
          type: string
          required: true
          description: Which poll are you voting for?
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /file/list:
    get:
      tags:
      - "fileio"
      summary: "List files"
      description: ""
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /file/upload:
    post:
      tags:
      - "fileio"
      summary: "Upload a file"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: formData
          name: fileObject
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: fileDescription
          type: string
          required: true
          description: What is the file about?
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /file/download:
    post:
      tags:
      - "fileio"
      summary: "Download a file"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: formData
          name: fileDescription
          type: string
          required: true
          description: What is the file about?
      produces:
      - "application/octet-stream"
      responses:
        "405":
          description: "Invalid input"
  /paper/init:
    get:
      tags:
      - "paper"
      summary: "Init question paper schema"
      description: ""
      operationId: "initPaperSchema"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /paper/summaryInfo:
    get:
      tags:
      - "paper"
      summary: "Get number of questions"
      description: ""
      operationId: "getSummaryInfo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /paper/marks:
    post:
      tags:
      - "paper"
      summary: "Post marks"
      description: ""
      consumes:
      - "multipart/form-data"
      parameters:
        - in: formData
          name: marksData
          type: string
          required: true
          description: JSON marks map
        - in: formData
          name: annotationData
          type: string
          required: true
          description: JSON annotation
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
    get:
      tags:
      - "paper"
      summary: "Get marks"
      description: ""
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /paper/translate/{id}:
    get:
      tags:
      - "paper"
      summary: "Get english text and translated text"
      description: ""
      parameters:
      - name: "id"
        in: "path"
        description: "id of question to return"
        required: true
        type: "integer"
        format: "int8"
      operationId: "getTranslation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /paper/translate:
    post:
      tags:
      - "paper"
      summary: "Post english text and translated text"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Message"
        required: true
        schema:
          $ref: "#/definitions/TranslatedQuestion"
      operationId: "postTranslation"
      consumes:
      - "application/json; charset=utf-8"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /paper/translate/download:
    get:
      tags:
      - "paper"
      summary: "Download pdf"
      description: ""
      operationId: "downloadTranslatedPdf"
      consumes:
      - "application/json; charset=utf-8"
      produces:
      - "application/pdf"
      responses:
        "405":
          description: "Invalid input"
  /bulletin:
    get:
      tags:
      - "bulletin"
      summary: "Get what is on bulletin board"
      description: ""
      operationId: "getBulletin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
    post:
      tags:
      - "bulletin"
      summary: "Post a bulletin board message"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Message"
        required: true
        schema:
          $ref: "#/definitions/Message"
      operationId: "postBulletin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /auth/init:
    get:
      tags:
      - "auth"
      summary: "Initialise by creating auth store from csv"
      description: ""
      operationId: "createStore"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /auth/verify:
    get:
      tags:
      - "auth"
      summary: "Verify if token is valid"
      description: ""
      operationId: "verifyToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
  /auth/login:
    post:
      tags:
      - "auth"
      summary: "Login using creds"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Username and pass"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "OK"
        "401":
          description: "Access denied"
  /auth/resetPassword:
    get:
      tags:
      - "auth"
      summary: "Reset Password"
      description: ""
      responses:
        "200":
          description: "OK"
        "401":
          description: "Access denied"
  /auth/changePassword:
    post:
      tags:
      - "auth"
      summary: "Change Password"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Old and new password"
        required: true
        schema:
          $ref: "#/definitions/PasswordChange"
      responses:
        "200":
          description: "OK"
        "401":
          description: "Access denied"
  /auth/logout:
    get:
      tags:
      - "auth"
      summary: "Logout"
      description: ""
      responses:
        "405":
          description: "Invalid input"
definitions:
  User:
    type: "object"
    required:
    - "username"
    - "password"
    properties:
      username:
        type: "string"
        example: "doggie"
      password:
        type: "string"
        format: "password"
        example: "abcdefg"
  PasswordChange:
    type: "object"
    required:
    - "oldPassword"
    - "newPassword"
    properties:
      oldPassword:
        type: "string"
        format: "password"
        example: "doggie"
      newPassword:
        type: "string"
        format: "password"
        example: "abcdefg"
  Message:
    type: "object"
    required:
    - "message"
    - "expiry"
    properties:
      message:
        type: "string"
        example: "This is an example message"
      expiry:
        type: "integer"
        example: 1639217672
  TranslatedQuestion:
    type: "object"
    required:
    - "id"
    - "translatedText"
    properties:
      id:
        type: "integer"
        example: 0
      translatedText:
        type: "string"
        example: "J'ne sais pas"